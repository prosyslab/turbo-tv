#65:Int32Constant[0]()()()
#49:HeapConstant[0x137f00000de1 <false>]()()()  [Type: HeapConstant(0x5613fd5e5f68 {0x137f00000de1 <false>})]
#48:HeapConstant[0x137f00000dc5 <true>]()()()  [Type: HeapConstant(0x5613fd5e5f78 {0x137f00000dc5 <true>})]
#219:Int64Constant[3]()()()
#218:Int64Constant[-1]()()()
#0:Start()()()  [Type: Internal]
#3:Parameter[2](#0:Start)()()  [Type: NonInternal]
#113:TruncateInt64ToInt32(#3:Parameter)()()
#106:Int32Constant[1]()()()
#114:Word32Sar[ShiftOutZeros](#113:TruncateInt64ToInt32, #106:Int32Constant)()()
#2:Parameter[1](#0:Start)()()  [Type: NonInternal]
#118:TruncateInt64ToInt32(#2:Parameter)()()
#119:Word32Sar[ShiftOutZeros](#118:TruncateInt64ToInt32, #106:Int32Constant)()()
#67:Int32LessThan(#65:Int32Constant, #119:Word32Sar)()()
#115:Word32And(#2:Parameter, #106:Int32Constant)()()
#1:Parameter[0, debug name: %this](#0:Start)()()  [Type: Receiver]
#10:TypedStateValues[kRepTagged|kTypeAny, kRepTagged|kTypeAny, kRepTagged|kTypeAny, dense](#1:Parameter, #2:Parameter, #3:Parameter)()()  [Type: Internal]
#11:TypedStateValues[, sparse:..........]()()()  [Type: Internal]
#59:TypedStateValues[kRepTagged|kTypeAny, dense](#2:Parameter)()()
#5:Parameter[5, debug name: %context](#0:Start)()()  [Type: OtherInternal]
#47:HeapConstant[0x137f0019affd <JSFunction opt (sfi = 0x137f0019adb1)>]()()()  [Type: HeapConstant(0x5613fd5e58f8 {0x137f0019affd <JSFunction opt (sfi = 0x137f0019adb1)>})]
#19:FrameState[UNOPTIMIZED_FRAME, 11, Ignore, 0x137f0019adb1 <SharedFunctionInfo opt>](#10:TypedStateValues, #11:TypedStateValues, #59:TypedStateValues, #5:Parameter, #47:HeapConstant)()()  [Type: Internal]
#110:Word32And(#3:Parameter, #106:Int32Constant)()()
#96:ExternalConstant[0x5613fd561460]()()()
#57:Int64Constant[0]()()()
#97:Load[kRepWord64](#96:ExternalConstant, #57:Int64Constant)(#0:Start)(#0:Start)
#98:StackPointerGreaterThan[JSFunctionEntry](#97:Load)(#97:Load)()
#107:HeapConstant[0x137f0002ca55 <Code BUILTIN CEntry_Return1_ArgvOnStack_NoBuiltinExit>]()()()
#104:LoadStackCheckOffset()()()
#105:ExternalConstant[0x5613fc217ec0<StackGuardWithGap.entry>]()()()
#7:HeapConstant[0x137f00183c2d <NativeContext[281]>]()()()  [Type: HeapConstant(0x5613fd5e58e8 {0x137f00183c2d <NativeContext[281]>})]
#60:TypedStateValues[, sparse:.]()()()
#14:FrameState[UNOPTIMIZED_FRAME, -1, Ignore, 0x137f0019adb1 <SharedFunctionInfo opt>](#10:TypedStateValues, #11:TypedStateValues, #60:TypedStateValues, #5:Parameter, #47:HeapConstant)()()  [Type: Internal]
#99:Branch[Unspecified, True](#98:StackPointerGreaterThan)()(#0:Start)
#101:IfFalse()()(#99:Branch)
#9:Call[Code:StackGuardWithGap:r1s1i5f1](#107:HeapConstant, #104:LoadStackCheckOffset, #105:ExternalConstant, #106:Int32Constant, #7:HeapConstant, #14:FrameState)(#98:StackPointerGreaterThan)(#101:IfFalse)
#100:IfTrue()()(#99:Branch)
#102:Merge()()(#100:IfTrue, #9:Call)
#103:EffectPhi()(#98:StackPointerGreaterThan, #9:Call)(#102:Merge)
#112:DeoptimizeIf[NotASmi, FeedbackSource(INVALID)](#110:Word32And, #19:FrameState)(#103:EffectPhi)(#102:Merge)
#117:DeoptimizeIf[NotASmi, FeedbackSource(INVALID)](#115:Word32And, #19:FrameState)(#112:DeoptimizeIf)(#112:DeoptimizeIf)
#68:Branch[Machine, True](#67:Int32LessThan)()(#117:DeoptimizeIf)
#69:IfTrue()()(#68:Branch)
#70:Int32Div(#114:Word32Sar, #119:Word32Sar)()(#69:IfTrue)
#66:Int32Constant[-1]()()()
#72:Int32LessThan(#119:Word32Sar, #66:Int32Constant)()()
#71:IfFalse()()(#68:Branch)
#73:Branch[Machine, None](#72:Int32LessThan)()(#71:IfFalse)
#74:IfTrue()()(#73:Branch)
#75:Int32Div(#114:Word32Sar, #119:Word32Sar)()(#74:IfTrue)
#81:Int32Sub(#65:Int32Constant, #114:Word32Sar)()()
#76:IfFalse()()(#73:Branch)
#78:Branch[Unspecified, None](#119:Word32Sar)()(#76:IfFalse)
#79:IfFalse()()(#78:Branch)
#80:IfTrue()()(#78:Branch)
#82:Merge()()(#79:IfFalse, #80:IfTrue)
#83:Phi[kRepWord32](#65:Int32Constant, #81:Int32Sub)()(#82:Merge)
#84:Merge()()(#74:IfTrue, #82:Merge)
#85:Phi[kRepWord32](#75:Int32Div, #83:Phi)()(#84:Merge)
#86:Merge()()(#69:IfTrue, #84:Merge)
#87:Phi[kRepWord32](#70:Int32Div, #85:Phi)()(#86:Merge)
#22:Word32Shr(#87:Phi, #119:Word32Sar)()()  [Type: Unsigned32]
#142:Word32Shl(#22:Word32Shr, #106:Int32Constant)()()
#143:BitcastWord32ToWord64(#142:Word32Shl)()()
#196:ExternalConstant[0x5613fd561500]()()()
#137:Int32Constant[1073741823]()()()
#138:Uint32LessThanOrEqual(#22:Word32Shr, #137:Int32Constant)()()
#24:Branch[Unspecified, None](#22:Word32Shr)()(#86:Merge)
#25:IfTrue()()(#24:Branch)
#139:Branch[Machine, True](#138:Uint32LessThanOrEqual)()(#25:IfTrue)
#140:IfFalse()()(#139:Branch)
#199:Load[kRepWord64](#196:ExternalConstant, #57:Int64Constant)(#117:DeoptimizeIf)(#140:IfFalse)
#195:HeapConstant[0x137f000241b1 <Code BUILTIN AllocateRegularInYoungGeneration>]()()()
#198:Int64Constant[12]()()()
#197:ExternalConstant[0x5613fd561508]()()()
#200:Load[kRepWord64](#197:ExternalConstant, #57:Int64Constant)(#199:Load)(#140:IfFalse)
#201:Int64Add(#199:Load, #198:Int64Constant)()()
#202:Uint64LessThan(#201:Int64Add, #200:Load)()()
#203:Branch[Machine, True](#202:Uint64LessThan)()(#140:IfFalse)
#204:IfFalse()()(#203:Branch)
#206:Merge()()(#204:IfFalse)
#207:Call[Code:Allocate Descriptor:r1s0i2f0](#195:HeapConstant, #198:Int64Constant)(#200:Load)(#206:Merge)
#208:BitcastTaggedToWord(#207:Call)(#207:Call)(#206:Merge)
#210:Int64Add(#208:BitcastTaggedToWord, #218:Int64Constant)()()
#205:IfTrue()()(#203:Branch)
#211:Merge()()(#205:IfTrue, #206:Merge)
#213:Phi[kRepWord64](#199:Load, #210:Int64Add)()(#211:Merge)
#209:Int64Constant[1]()()()
#216:Int64Add(#213:Phi, #209:Int64Constant)()()
#214:Int64Add(#213:Phi, #198:Int64Constant)()()
#212:EffectPhi()(#200:Load, #208:BitcastTaggedToWord)(#211:Merge)
#215:Store[kRepWord64, NoWriteBarrier](#196:ExternalConstant, #57:Int64Constant, #214:Int64Add)(#212:EffectPhi)(#211:Merge)
#217:BitcastWordToTagged(#216:Int64Add)(#215:Store)(#211:Merge)
#141:IfTrue()()(#139:Branch)
#150:Merge()()(#141:IfTrue, #211:Merge)
#152:Phi[kRepTagged](#143:BitcastWord32ToWord64, #217:BitcastWordToTagged)()(#150:Merge)
#27:IfFalse()()(#24:Branch)
#26:Merge()()(#150:Merge, #27:IfFalse)
#28:Phi[kRepTagged](#152:Phi, #2:Parameter)()(#26:Merge)  [Type: NonInternal]
#157:TruncateInt64ToInt32(#28:Phi)()()
#158:Word32Sar[ShiftOutZeros](#157:TruncateInt64ToInt32, #106:Int32Constant)()()
#159:Int32LessThan(#22:Word32Shr, #65:Int32Constant)()()
#154:Word32And(#28:Phi, #106:Int32Constant)()()
#145:ChangeUint32ToFloat64(#22:Word32Shr)()()
#129:HeapConstant[0x137f00000345 <Map[12](HEAP_NUMBER_TYPE)>]()()()
#148:Store[kRepTaggedPointer, NoWriteBarrier](#217:BitcastWordToTagged, #218:Int64Constant, #129:HeapConstant)(#217:BitcastWordToTagged)(#211:Merge)
#149:Store[kRepFloat64, NoWriteBarrier](#217:BitcastWordToTagged, #219:Int64Constant, #145:ChangeUint32ToFloat64)(#148:Store)(#211:Merge)
#151:EffectPhi()(#117:DeoptimizeIf, #149:Store)(#150:Merge)
#153:EffectPhi()(#151:EffectPhi, #117:DeoptimizeIf)(#26:Merge)
#156:DeoptimizeIf[NotASmi, FeedbackSource(INVALID)](#154:Word32And, #19:FrameState)(#153:EffectPhi)(#26:Merge)
#160:DeoptimizeIf[LostPrecision, FeedbackSource(INVALID)](#159:Int32LessThan, #19:FrameState)(#156:DeoptimizeIf)(#156:DeoptimizeIf)
#161:Int32MulWithOverflow(#158:Word32Sar, #22:Word32Shr)()(#160:DeoptimizeIf)
#162:Projection[1](#161:Int32MulWithOverflow)()(#160:DeoptimizeIf)
#163:DeoptimizeIf[Overflow, FeedbackSource(INVALID)](#162:Projection, #19:FrameState)(#160:DeoptimizeIf)(#160:DeoptimizeIf)
#165:Word32And(#48:HeapConstant, #106:Int32Constant)()()
#167:Branch[Unspecified, None](#165:Word32And)()(#163:DeoptimizeIf)
#169:IfTrue()()(#167:Branch)
#170:Load[kRepTaggedPointer|kTypeAny](#48:HeapConstant, #218:Int64Constant)(#163:DeoptimizeIf)(#169:IfTrue)
#175:HeapConstant[0x137f000003bd <Map[28](ODDBALL_TYPE)>]()()()
#176:Word32Equal(#170:Load, #175:HeapConstant)()()
#171:Word32Equal(#170:Load, #129:HeapConstant)()()
#172:Branch[Machine, None](#171:Word32Equal)()(#169:IfTrue)
#174:IfFalse()()(#172:Branch)
#177:DeoptimizeUnless[NotANumberOrBoolean, FeedbackSource(INVALID)](#176:Word32Equal, #19:FrameState)(#170:Load)(#174:IfFalse)
#173:IfTrue()()(#172:Branch)
#178:Merge()()(#173:IfTrue, #177:DeoptimizeUnless)
#179:EffectPhi()(#170:Load, #177:DeoptimizeUnless)(#178:Merge)
#180:Load[kRepFloat64|kTypeNumber](#48:HeapConstant, #219:Int64Constant)(#179:EffectPhi)(#178:Merge)
#168:IfFalse()()(#167:Branch)
#185:Merge()()(#178:Merge, #168:IfFalse)
#186:EffectPhi()(#180:Load, #163:DeoptimizeIf)(#185:Merge)
#43:Return(#65:Int32Constant, #49:HeapConstant)(#186:EffectPhi)(#185:Merge)
#44:End()()(#43:Return)