#59:Int32Constant[0]()()()
#28:NumberConstant[-1]()()()  [Type: Range(-1, -1)]
#86:TruncateInt64ToInt32(#28:NumberConstant)()()
#78:Int32Constant[1]()()()
#87:Word32Sar[ShiftOutZeros](#86:TruncateInt64ToInt32, #78:Int32Constant)()()
#60:Int32Constant[-1]()()()
#83:Word32And(#28:NumberConstant, #78:Int32Constant)()()
#0:Start()()()  [Type: Internal]
#1:Parameter[0, debug name: %this](#0:Start)()()  [Type: Receiver]
#2:Parameter[1](#0:Start)()()  [Type: NonInternal]
#3:Parameter[2](#0:Start)()()  [Type: NonInternal]
#10:TypedStateValues[kRepTagged|kTypeAny, kRepTagged|kTypeAny, kRepTagged|kTypeAny, dense](#1:Parameter, #2:Parameter, #3:Parameter)()()  [Type: Internal]
#11:TypedStateValues[, sparse:......]()()()  [Type: Internal]
#58:TypedStateValues[, sparse:.]()()()
#5:Parameter[5, debug name: %context](#0:Start)()()  [Type: OtherInternal]
#49:HeapConstant[0x11ca0019afbd <JSFunction opt (sfi = 0x11ca0019ad71)>]()()()  [Type: HeapConstant(0x560d1af5d8f8 {0x11ca0019afbd <JSFunction opt (sfi = 0x11ca0019ad71)>})]
#16:FrameState[UNOPTIMIZED_FRAME, 0, Ignore, 0x11ca0019ad71 <SharedFunctionInfo opt>](#10:TypedStateValues, #11:TypedStateValues, #58:TypedStateValues, #5:Parameter, #49:HeapConstant)()()  [Type: Internal]
#68:ExternalConstant[0x560d1aed9460]()()()
#56:Int64Constant[0]()()()
#69:Load[kRepWord64](#68:ExternalConstant, #56:Int64Constant)(#0:Start)(#0:Start)
#70:StackPointerGreaterThan[JSFunctionEntry](#69:Load)(#69:Load)()
#79:HeapConstant[0x11ca0002ca55 <Code BUILTIN CEntry_Return1_ArgvOnStack_NoBuiltinExit>]()()()
#76:LoadStackCheckOffset()()()
#77:ExternalConstant[0x560d197f0ec0<StackGuardWithGap.entry>]()()()
#7:HeapConstant[0x11ca00183c2d <NativeContext[281]>]()()()  [Type: HeapConstant(0x560d1af5d8e8 {0x11ca00183c2d <NativeContext[281]>})]
#14:FrameState[UNOPTIMIZED_FRAME, -1, Ignore, 0x11ca0019ad71 <SharedFunctionInfo opt>](#10:TypedStateValues, #11:TypedStateValues, #58:TypedStateValues, #5:Parameter, #49:HeapConstant)()()  [Type: Internal]
#71:Branch[Unspecified, True](#70:StackPointerGreaterThan)()(#0:Start)
#73:IfFalse()()(#71:Branch)
#9:Call[Code:StackGuardWithGap:r1s1i5f1](#79:HeapConstant, #76:LoadStackCheckOffset, #77:ExternalConstant, #78:Int32Constant, #7:HeapConstant, #14:FrameState)(#70:StackPointerGreaterThan)(#73:IfFalse)
#72:IfTrue()()(#71:Branch)
#74:Merge()()(#72:IfTrue, #9:Call)
#75:EffectPhi()(#70:StackPointerGreaterThan, #9:Call)(#74:Merge)
#85:DeoptimizeIf[NotASmi, FeedbackSource(INVALID)](#83:Word32And, #16:FrameState)(#75:EffectPhi)(#74:Merge)
#88:Int32AddWithOverflow(#87:Word32Sar, #60:Int32Constant)()(#85:DeoptimizeIf)
#89:Projection[1](#88:Int32AddWithOverflow)()(#85:DeoptimizeIf)
#90:DeoptimizeIf[Overflow, FeedbackSource(INVALID)](#89:Projection, #16:FrameState)(#85:DeoptimizeIf)(#85:DeoptimizeIf)
#91:Projection[0](#88:Int32AddWithOverflow)()(#90:DeoptimizeIf)
#92:Int32AddWithOverflow(#91:Projection, #60:Int32Constant)()(#90:DeoptimizeIf)
#93:Projection[1](#92:Int32AddWithOverflow)()(#90:DeoptimizeIf)
#94:DeoptimizeIf[Overflow, FeedbackSource(INVALID)](#93:Projection, #16:FrameState)(#90:DeoptimizeIf)(#90:DeoptimizeIf)
#95:Projection[0](#92:Int32AddWithOverflow)()(#94:DeoptimizeIf)
#96:Int32AddWithOverflow(#95:Projection, #95:Projection)()(#94:DeoptimizeIf)
#97:Projection[1](#96:Int32AddWithOverflow)()(#94:DeoptimizeIf)
#98:Branch[Machine, False](#97:Projection)()(#94:DeoptimizeIf)
#100:IfFalse()()(#98:Branch)
#101:Projection[0](#96:Int32AddWithOverflow)()(#100:IfFalse)
#102:BitcastWord32ToWord64(#101:Projection)()()
#115:Return(#59:Int32Constant, #102:BitcastWord32ToWord64)(#94:DeoptimizeIf)(#100:IfFalse)
#121:ExternalConstant[0x560d1aed9500]()()()
#99:IfTrue()()(#98:Branch)
#124:Load[kRepWord64](#121:ExternalConstant, #56:Int64Constant)(#94:DeoptimizeIf)(#99:IfTrue)
#120:HeapConstant[0x11ca000241b1 <Code BUILTIN AllocateRegularInYoungGeneration>]()()()
#123:Int64Constant[12]()()()
#122:ExternalConstant[0x560d1aed9508]()()()
#125:Load[kRepWord64](#122:ExternalConstant, #56:Int64Constant)(#124:Load)(#99:IfTrue)
#126:Int64Add(#124:Load, #123:Int64Constant)()()
#127:Uint64LessThan(#126:Int64Add, #125:Load)()()
#128:Branch[Machine, True](#127:Uint64LessThan)()(#99:IfTrue)
#129:IfFalse()()(#128:Branch)
#131:Merge()()(#129:IfFalse)
#132:Call[Code:Allocate Descriptor:r1s0i2f0](#120:HeapConstant, #123:Int64Constant)(#125:Load)(#131:Merge)
#133:BitcastTaggedToWord(#132:Call)(#132:Call)(#131:Merge)
#145:Int64Constant[-1]()()()
#135:Int64Add(#133:BitcastTaggedToWord, #145:Int64Constant)()()
#130:IfTrue()()(#128:Branch)
#136:Merge()()(#130:IfTrue, #131:Merge)
#138:Phi[kRepWord64](#124:Load, #135:Int64Add)()(#136:Merge)
#134:Int64Constant[1]()()()
#141:Int64Add(#138:Phi, #134:Int64Constant)()()
#139:Int64Add(#138:Phi, #123:Int64Constant)()()
#137:EffectPhi()(#125:Load, #133:BitcastTaggedToWord)(#136:Merge)
#140:Store[kRepWord64, NoWriteBarrier](#121:ExternalConstant, #56:Int64Constant, #139:Int64Add)(#137:EffectPhi)(#136:Merge)
#142:BitcastWordToTagged(#141:Int64Add)(#140:Store)(#136:Merge)
#144:Int64Constant[3]()()()
#104:ChangeInt32ToFloat64(#95:Projection)()()
#107:HeapConstant[0x11ca00000345 <Map[12](HEAP_NUMBER_TYPE)>]()()()
#108:Store[kRepTaggedPointer, NoWriteBarrier](#142:BitcastWordToTagged, #145:Int64Constant, #107:HeapConstant)(#142:BitcastWordToTagged)(#136:Merge)
#109:Store[kRepFloat64, NoWriteBarrier](#142:BitcastWordToTagged, #144:Int64Constant, #104:ChangeInt32ToFloat64)(#108:Store)(#136:Merge)
#116:Return(#59:Int32Constant, #142:BitcastWordToTagged)(#109:Store)(#136:Merge)
#46:End()()(#115:Return, #116:Return)