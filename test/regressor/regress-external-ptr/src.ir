#0:Start()()()  [Type: Internal]
#1:Parameter[0, debug name: %this](#0:Start)()()  [Type: Receiver]
#2:Parameter[1](#0:Start)()()  [Type: NonInternal]
#3:Parameter[2](#0:Start)()()  [Type: NonInternal]
#10:TypedStateValues[kRepTagged|kTypeAny, kRepTagged|kTypeAny, kRepTagged|kTypeAny, dense](#1:Parameter, #2:Parameter, #3:Parameter)()()  [Type: Internal]
#11:TypedStateValues[, sparse:........]()()()  [Type: Internal]
#68:TypedStateValues[kRepTagged|kTypeAny, dense](#3:Parameter)()()
#5:Parameter[5, debug name: %context](#0:Start)()()  [Type: OtherInternal]
#59:HeapConstant[0x2cdb0019afdd <JSFunction opt (sfi = 0x2cdb0019ad91)>]()()()  [Type: HeapConstant(0x55ac43088fe8 {0x2cdb0019afdd <JSFunction opt (sfi = 0x2cdb0019ad91)>})]
#23:FrameState[UNOPTIMIZED_FRAME, 11, Ignore, 0x2cdb0019ad91 <SharedFunctionInfo opt>](#10:TypedStateValues, #11:TypedStateValues, #68:TypedStateValues, #5:Parameter, #59:HeapConstant)()()  [Type: Internal]
#198:Int64Constant[-1]()()()
#81:ExternalConstant[0x55ac43004b50]()()()
#71:Int64Constant[0]()()()
#82:Load[kRepWord64](#81:ExternalConstant, #71:Int64Constant)(#0:Start)(#0:Start)
#83:StackPointerGreaterThan[JSFunctionEntry](#82:Load)(#82:Load)()
#91:HeapConstant[0x2cdb0002ca55 <Code BUILTIN CEntry_Return1_ArgvOnStack_NoBuiltinExit>]()()()
#89:LoadStackCheckOffset()()()
#90:ExternalConstant[0x55ac41402ec0<StackGuardWithGap.entry>]()()()
#76:Int32Constant[1]()()()
#7:HeapConstant[0x2cdb00183c2d <NativeContext[281]>]()()()  [Type: HeapConstant(0x55ac43088fd8 {0x2cdb00183c2d <NativeContext[281]>})]
#69:TypedStateValues[, sparse:.]()()()
#14:FrameState[UNOPTIMIZED_FRAME, -1, Ignore, 0x2cdb0019ad91 <SharedFunctionInfo opt>](#10:TypedStateValues, #11:TypedStateValues, #69:TypedStateValues, #5:Parameter, #59:HeapConstant)()()  [Type: Internal]
#84:Branch[Unspecified, True](#83:StackPointerGreaterThan)()(#0:Start)
#86:IfFalse()()(#84:Branch)
#9:Call[Code:StackGuardWithGap:r1s1i5f1](#91:HeapConstant, #89:LoadStackCheckOffset, #90:ExternalConstant, #76:Int32Constant, #7:HeapConstant, #14:FrameState)(#83:StackPointerGreaterThan)(#86:IfFalse)
#85:IfTrue()()(#84:Branch)
#87:Merge()()(#85:IfTrue, #9:Call)
#88:EffectPhi()(#83:StackPointerGreaterThan, #9:Call)(#87:Merge)
#104:HeapConstant[0x2cdb00000e0d <String[0]: #>]()()()
#105:Word32Equal(#3:Parameter, #104:HeapConstant)()()
#62:HeapConstant[0x2cdb00000de1 <false>]()()()  [Type: HeapConstant(0x55ac43089630 {0x2cdb00000de1 <false>})]
#100:Word32Equal(#3:Parameter, #62:HeapConstant)()()
#94:Word32And(#3:Parameter, #76:Int32Constant)()()
#96:Branch[Unspecified, True](#94:Word32And)()(#87:Merge)
#98:IfTrue()()(#96:Branch)
#101:Branch[Machine, None](#100:Word32Equal)()(#98:IfTrue)
#103:IfFalse()()(#101:Branch)
#106:Branch[Machine, None](#105:Word32Equal)()(#103:IfFalse)
#111:IfFalse()()(#106:Branch)
#112:Load[kRepTaggedPointer|kTypeAny](#3:Parameter, #198:Int64Constant)(#88:EffectPhi)(#111:IfFalse)
#199:Int64Constant[9]()()()
#113:Load[kRepWord8|kTypeUint32](#112:Load, #199:Int64Constant)(#112:Load)(#111:IfFalse)
#200:Int64Constant[3]()()()
#120:HeapConstant[0x2cdb00000345 <Map[12](HEAP_NUMBER_TYPE)>]()()()
#121:Word32Equal(#112:Load, #120:HeapConstant)()()
#114:Int32Constant[16]()()()
#115:Word32And(#113:Load, #114:Int32Constant)()()
#117:Branch[Unspecified, None](#115:Word32And)()(#111:IfFalse)
#119:IfFalse()()(#117:Branch)
#122:Branch[Machine, False](#121:Word32Equal)()(#119:IfFalse)
#123:IfTrue()()(#122:Branch)
#131:Load[kRepFloat64|kTypeNumber](#3:Parameter, #200:Int64Constant)(#113:Load)(#123:IfTrue)
#125:HeapConstant[0x2cdb00000525 <Map(BIG_INT_BASE_TYPE)>]()()()
#126:Word32Equal(#112:Load, #125:HeapConstant)()()
#124:IfFalse()()(#122:Branch)
#127:Branch[Machine, False](#126:Word32Equal)()(#124:IfFalse)
#128:IfTrue()()(#127:Branch)
#135:Load[kRepWord32|kTypeUint32](#3:Parameter, #200:Int64Constant)(#113:Load)(#128:IfTrue)
#129:IfFalse()()(#127:Branch)
#99:Float64Constant[0]()()()
#132:Float64Abs(#131:Load)()()
#133:Float64LessThan(#99:Float64Constant, #132:Float64Abs)()()
#155:Branch[Unspecified, None](#133:Float64LessThan)()(#123:IfTrue)
#156:IfTrue()()(#155:Branch)
#136:Int32Constant[2147483646]()()()
#137:Word32And(#135:Load, #136:Int32Constant)()()
#158:Branch[Unspecified, None](#137:Word32And)()(#128:IfTrue)
#159:IfTrue()()(#158:Branch)
#16:NumberConstant[0]()()()  [Type: Range(0, 0)]
#141:Word32Equal(#3:Parameter, #16:NumberConstant)()()
#97:IfFalse()()(#96:Branch)
#161:Branch[Unspecified, None](#141:Word32Equal)()(#97:IfFalse)
#162:IfFalse()()(#161:Branch)
#21:Merge()()(#129:IfFalse, #156:IfTrue, #159:IfTrue, #162:IfFalse)
#164:EffectPhi()(#113:Load, #131:Load, #135:Load, #88:EffectPhi)(#21:Merge)
#24:Deoptimize[InsufficientTypeFeedbackForBinaryOperation, FeedbackSource(INVALID)](#23:FrameState)(#164:EffectPhi)(#21:Merge)
#75:Int32Constant[0]()()()
#169:TruncateInt64ToInt32(#3:Parameter)()()
#170:Word32Sar[ShiftOutZeros](#169:TruncateInt64ToInt32, #76:Int32Constant)()()
#26:TypedStateValues[kRepTagged|kTypeAny, sparse:..^.....](#3:Parameter)()()  [Type: Internal]
#73:TypedStateValues[kRepTagged|kTypeAny, dense](#3:Parameter)()()
#27:FrameState[UNOPTIMIZED_FRAME, 17, Ignore, 0x2cdb0019ad91 <SharedFunctionInfo opt>](#10:TypedStateValues, #26:TypedStateValues, #73:TypedStateValues, #5:Parameter, #59:HeapConstant)()()  [Type: Internal]
#102:IfTrue()()(#101:Branch)
#107:IfTrue()()(#106:Branch)
#118:IfTrue()()(#117:Branch)
#157:IfFalse()()(#155:Branch)
#160:IfFalse()()(#158:Branch)
#163:IfTrue()()(#161:Branch)
#19:Merge()()(#102:IfTrue, #107:IfTrue, #118:IfTrue, #157:IfFalse, #160:IfFalse, #163:IfTrue)
#165:EffectPhi()(#88:EffectPhi, #88:EffectPhi, #113:Load, #131:Load, #135:Load, #88:EffectPhi)(#19:Merge)
#168:DeoptimizeIf[NotASmi, FeedbackSource(INVALID)](#94:Word32And, #27:FrameState)(#165:EffectPhi)(#19:Merge)
#175:Int32AddWithOverflow(#170:Word32Sar, #170:Word32Sar)()(#168:DeoptimizeIf)
#176:Projection[1](#175:Int32AddWithOverflow)()(#168:DeoptimizeIf)
#177:Branch[Machine, False](#176:Projection)()(#168:DeoptimizeIf)
#179:IfFalse()()(#177:Branch)
#180:Projection[0](#175:Int32AddWithOverflow)()(#179:IfFalse)
#181:BitcastWord32ToWord64(#180:Projection)()()
#193:Return(#75:Int32Constant, #181:BitcastWord32ToWord64)(#168:DeoptimizeIf)(#179:IfFalse)
#202:ExternalConstant[0x55ac43004bf0]()()()
#178:IfTrue()()(#177:Branch)
#205:Load[kRepWord64](#202:ExternalConstant, #71:Int64Constant)(#168:DeoptimizeIf)(#178:IfTrue)
#201:HeapConstant[0x2cdb000241b1 <Code BUILTIN AllocateRegularInYoungGeneration>]()()()
#204:Int64Constant[12]()()()
#203:ExternalConstant[0x55ac43004bf8]()()()
#206:Load[kRepWord64](#203:ExternalConstant, #71:Int64Constant)(#205:Load)(#178:IfTrue)
#207:Int64Add(#205:Load, #204:Int64Constant)()()
#208:Uint64LessThan(#207:Int64Add, #206:Load)()()
#209:Branch[Machine, True](#208:Uint64LessThan)()(#178:IfTrue)
#210:IfFalse()()(#209:Branch)
#212:Merge()()(#210:IfFalse)
#213:Call[Code:Allocate Descriptor:r1s0i2f0](#201:HeapConstant, #204:Int64Constant)(#206:Load)(#212:Merge)
#214:BitcastTaggedToWord(#213:Call)(#213:Call)(#212:Merge)
#216:Int64Add(#214:BitcastTaggedToWord, #198:Int64Constant)()()
#211:IfTrue()()(#209:Branch)
#217:Merge()()(#211:IfTrue, #212:Merge)
#219:Phi[kRepWord64](#205:Load, #216:Int64Add)()(#217:Merge)
#215:Int64Constant[1]()()()
#222:Int64Add(#219:Phi, #215:Int64Constant)()()
#220:Int64Add(#219:Phi, #204:Int64Constant)()()
#218:EffectPhi()(#206:Load, #214:BitcastTaggedToWord)(#217:Merge)
#221:Store[kRepWord64, NoWriteBarrier](#202:ExternalConstant, #71:Int64Constant, #220:Int64Add)(#218:EffectPhi)(#217:Merge)
#223:BitcastWordToTagged(#222:Int64Add)(#221:Store)(#217:Merge)
#183:ChangeInt32ToFloat64(#170:Word32Sar)()()
#186:Store[kRepTaggedPointer, NoWriteBarrier](#223:BitcastWordToTagged, #198:Int64Constant, #120:HeapConstant)(#223:BitcastWordToTagged)(#217:Merge)
#187:Store[kRepFloat64, NoWriteBarrier](#223:BitcastWordToTagged, #200:Int64Constant, #183:ChangeInt32ToFloat64)(#186:Store)(#217:Merge)
#194:Return(#75:Int32Constant, #223:BitcastWordToTagged)(#187:Store)(#217:Merge)
#56:End()()(#24:Deoptimize, #193:Return, #194:Return)