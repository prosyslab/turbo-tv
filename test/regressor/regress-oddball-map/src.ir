#50:Int32Constant[0]()()()
#41:HeapConstant[0x161700000de1 <false>]()()()  [Type: HeapConstant(0x562c13eba600 {0x161700000de1 <false>})]
#55:ExternalConstant[0x562c13e35b50]()()()
#47:Int64Constant[0]()()()
#0:Start()()()  [Type: Internal]
#56:Load[kRepWord64](#55:ExternalConstant, #47:Int64Constant)(#0:Start)(#0:Start)
#57:StackPointerGreaterThan[JSFunctionEntry](#56:Load)(#56:Load)()
#66:HeapConstant[0x16170002ca55 <Code BUILTIN CEntry_Return1_ArgvOnStack_NoBuiltinExit>]()()()
#63:LoadStackCheckOffset()()()
#64:ExternalConstant[0x562c11ba9ec0<StackGuardWithGap.entry>]()()()
#65:Int32Constant[1]()()()
#7:HeapConstant[0x161700183c2d <NativeContext[281]>]()()()  [Type: HeapConstant(0x562c13eb9fd8 {0x161700183c2d <NativeContext[281]>})]
#38:HeapConstant[0x16170019af9d <JSFunction opt (sfi = 0x16170019ad51)>]()()()  [Type: HeapConstant(0x562c13eb9fe8 {0x16170019af9d <JSFunction opt (sfi = 0x16170019ad51)>})]
#58:Branch[Unspecified, True](#57:StackPointerGreaterThan)()(#0:Start)
#60:IfFalse()()(#58:Branch)
#9:Call[Code:StackGuardWithGap:r1s1i5f1](#66:HeapConstant, #63:LoadStackCheckOffset, #64:ExternalConstant, #65:Int32Constant, #7:HeapConstant, #0:Start)(#57:StackPointerGreaterThan)(#60:IfFalse)
#59:IfTrue()()(#58:Branch)
#61:Merge()()(#59:IfTrue, #9:Call)
#69:Word32And(#41:HeapConstant, #65:Int32Constant)()()
#71:Branch[Unspecified, None](#69:Word32And)()(#61:Merge)
#73:IfTrue()()(#71:Branch)
#74:LoadField[Map, tagged base, 0, OtherInternal, kRepMapWord|kTypeAny, MapWriteBarrier, mutable](#41:HeapConstant)(#0:Start)(#73:IfTrue)
#80:HeapConstant[0x1617000003bd <Map[28](ODDBALL_TYPE)>]()()()
#81:Word32Equal(#74:LoadField, #80:HeapConstant)()()
#75:HeapConstant[0x161700000345 <Map[12](HEAP_NUMBER_TYPE)>]()()()
#76:Word32Equal(#74:LoadField, #75:HeapConstant)()()
#77:Branch[Machine, None](#76:Word32Equal)()(#73:IfTrue)
#79:IfFalse()()(#77:Branch)
#82:DeoptimizeUnless[NotANumberOrBoolean, FeedbackSource(INVALID)](#81:Word32Equal, #0:Start)(#74:LoadField)(#79:IfFalse)
#78:IfTrue()()(#77:Branch)
#83:Merge()()(#78:IfTrue, #82:DeoptimizeUnless)
#85:LoadField[HeapNumberValue, tagged base, 4, Number, kRepFloat64|kTypeNumber, NoWriteBarrier, mutable](#41:HeapConstant)(#0:Start)(#83:Merge)
#72:IfFalse()()(#71:Branch)
#90:Merge()()(#83:Merge, #72:IfFalse)
#87:TruncateInt64ToInt32(#41:HeapConstant)()()
#88:Word32Sar[ShiftOutZeros](#87:TruncateInt64ToInt32, #65:Int32Constant)()()
#89:ChangeInt32ToFloat64(#88:Word32Sar)()()
#92:Phi[kRepFloat64](#85:LoadField, #89:ChangeInt32ToFloat64)()(#90:Merge)
#52:Float64Constant[32]()()()
#33:Float64Equal(#92:Phi, #52:Float64Constant)()()  [Type: HeapConstant(0x562c13eba600 {0x161700000de1 <false>})]
#93:Branch[Machine, None](#33:Float64Equal)()(#90:Merge)
#95:IfFalse()()(#93:Branch)
#102:Return(#50:Int32Constant, #41:HeapConstant)(#0:Start)(#95:IfFalse)
#40:HeapConstant[0x161700000dc5 <true>]()()()  [Type: HeapConstant(0x562c13eba610 {0x161700000dc5 <true>})]
#94:IfTrue()()(#93:Branch)
#103:Return(#50:Int32Constant, #40:HeapConstant)(#0:Start)(#94:IfTrue)
#35:End()()(#102:Return, #103:Return)